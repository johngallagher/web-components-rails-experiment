<!-- Stylesheets --!>
<link rel="stylesheet" media="screen" href="http://www.arnoldclark.com/assets/vehicles/index-8f935f470f5425626fa70f79a9786b021cc1cfcccefe62252344ba55a9ed1cf5.css">
<!-- End Stylesheets --!>


<!-- Ruby Model --!>
<% @ac_vehicle_search = Components::AcVehicleSearch.new(params: params) %>
<!-- End Ruby Model --!>


<!-- Template --!>
<%= form_tag "/vehicles", method: :get, id: "search", name: "search", data: { component: "ac_vehicle_search" }.merge(@ac_vehicle_search.current_options) do %>
  <%= render 'components/ac_vehicle_search_banner'  %>
  <div class="ch-container">

    <div class="ch-row">
      <%= render 'components/ac_vehicle_search_results' %>
      <%= render 'components/ac_vehicle_search_filter' %>
    </div>

    <%= render 'components/ac_search_results_pagination' %>

  </div>
<% end %>
<!-- End Template --!>

<!-- Javascripts --!>
<script>

var Nostalgia = {

  queryComponent: function(name) {
    return document.querySelector('[data-component="' + name + '"]');
  },

  executeReplacements: function(replacements) {
    replacements.map(function(action) {
      this.queryComponent(action.replace).outerHTML = action.with_content;
    }.bind(this));
  },

  asQueryParams: function(keyValueObject) {
    var queryParams = []
      for(var key in keyValueObject) {
        queryParams.push(key + "=" + keyValueObject[key]);
      }
    return queryParams.join("&");
  },

  loadInReplacementsFrom: function(url) {
    var request = new XMLHttpRequest();
    request.onload = function (e) {
      this.executeReplacements(e.target.response);
    }.bind(this);
    request.open('GET', url, true);
    request.responseType='json';
    request.send();
  },

  didStartLoading: function(name) {
    var url = "/api/components/" + name + "_loading";
    this.loadInReplacementsFrom(url);
  },

  refresh: function(component) {
    var url = "/api/components/" + component + "?" + this.asQueryParams(this.stateFor(component));
    this.loadInReplacementsFrom(url);
  },

  stateFor: function(name) {
    return this.queryComponent(name).dataset;
  },

  updateStateFor: function(name, newState) {
    return this.queryComponent(name).setAttribute("data-" + newState.key, newState.value);
  }
}

var AcVehicleSearch = {
  name: "ac_vehicle_search",

  filterDidChange: function(filter) {
    Nostalgia.didStartLoading(this.name);
    Nostalgia.updateStateFor(this.name, { key: filter.name, value: filter.value });
    Nostalgia.refresh(this.name);
  }
}

</script>
<!-- End Javascripts --!>
